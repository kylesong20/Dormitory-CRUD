<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyle.crud.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.kyle.crud.bean.Student">
    <id column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="tel_num" jdbcType="VARCHAR" property="telNum" />
    <result column="dorm_num" jdbcType="VARCHAR" property="dormNum" />
    <result column="dorm_id" jdbcType="INTEGER" property="dormId" />
  </resultMap>
  <resultMap id="WithDormBaseResultMap" type="com.kyle.crud.bean.Student">
    <id column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="tel_num" jdbcType="VARCHAR" property="telNum" />
    <result column="dorm_num" jdbcType="VARCHAR" property="dormNum" />
    <result column="dorm_id" jdbcType="INTEGER" property="dormId" />
    <association property="dormitory" javaType="com.kyle.crud.bean.Dormitory">
      <id column="dorm_id" property="dormId"/>
      <result column="dorm_name" property="dormName"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, stu_name, gender, tel_num, dorm_num, dorm_id
  </sql>
  <sql id="WithDormBase_Column_List">
    stu_id, stu_name, gender, tel_num, dorm_num, d.dorm_id, dorm_name
  </sql>
<!--
    List<Student> selectByExampleWithDorm(StudentExample example);
    Student selectByPrimaryKeyWithDorm(Integer stuId);
    -->
  <select id="selectByExampleWithDorm" resultMap="WithDormBaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithDormBase_Column_List" />
    from tb_stu s LEFT JOIN tb_dorm d on s.dorm_id = d.dorm_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithDorm" resultMap="WithDormBaseResultMap">
    select
    <include refid="WithDormBase_Column_List" />
    from tb_stu s LEFT JOIN tb_dorm d on s.dorm_id = d.dorm_id
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>

  <select id="selectByExample" parameterType="com.kyle.crud.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_stu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_stu
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_stu
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kyle.crud.bean.StudentExample">
    delete from tb_stu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kyle.crud.bean.Student">
    insert into tb_stu (stu_id, stu_name, gender, 
      tel_num, dorm_num, dorm_id
      )
    values (#{stuId,jdbcType=INTEGER}, #{stuName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{telNum,jdbcType=VARCHAR}, #{dormNum,jdbcType=VARCHAR}, #{dormId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kyle.crud.bean.Student">
    insert into tb_stu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="telNum != null">
        tel_num,
      </if>
      <if test="dormNum != null">
        dorm_num,
      </if>
      <if test="dormId != null">
        dorm_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="telNum != null">
        #{telNum,jdbcType=VARCHAR},
      </if>
      <if test="dormNum != null">
        #{dormNum,jdbcType=VARCHAR},
      </if>
      <if test="dormId != null">
        #{dormId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kyle.crud.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from tb_stu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_stu
    <set>
      <if test="row.stuId != null">
        stu_id = #{row.stuId,jdbcType=INTEGER},
      </if>
      <if test="row.stuName != null">
        stu_name = #{row.stuName,jdbcType=VARCHAR},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=CHAR},
      </if>
      <if test="row.telNum != null">
        tel_num = #{row.telNum,jdbcType=VARCHAR},
      </if>
      <if test="row.dormNum != null">
        dorm_num = #{row.dormNum,jdbcType=VARCHAR},
      </if>
      <if test="row.dormId != null">
        dorm_id = #{row.dormId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_stu
    set stu_id = #{row.stuId,jdbcType=INTEGER},
      stu_name = #{row.stuName,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=CHAR},
      tel_num = #{row.telNum,jdbcType=VARCHAR},
      dorm_num = #{row.dormNum,jdbcType=VARCHAR},
      dorm_id = #{row.dormId,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyle.crud.bean.Student">
    update tb_stu
    <set>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="telNum != null">
        tel_num = #{telNum,jdbcType=VARCHAR},
      </if>
      <if test="dormNum != null">
        dorm_num = #{dormNum,jdbcType=VARCHAR},
      </if>
      <if test="dormId != null">
        dorm_id = #{dormId,jdbcType=INTEGER},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kyle.crud.bean.Student">
    update tb_stu
    set stu_name = #{stuName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      tel_num = #{telNum,jdbcType=VARCHAR},
      dorm_num = #{dormNum,jdbcType=VARCHAR},
      dorm_id = #{dormId,jdbcType=INTEGER}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
</mapper>